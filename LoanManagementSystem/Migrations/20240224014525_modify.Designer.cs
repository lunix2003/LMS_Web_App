// <auto-generated />
using System;
using LoanManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanManagementSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240224014525_modify")]
    partial class modify
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoanManagementSystem.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.AppUser", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppUserId"));

                    b.Property<int>("IsHidden")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AppUserId");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.AppUserPermission", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UserPermission")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AppUserId");

                    b.ToTable("AppUserPermissions");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Collateral", b =>
                {
                    b.Property<int>("CollateralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollateralId"));

                    b.Property<string>("CollateralCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CollateralDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CollateralTypeId")
                        .HasColumnType("int");

                    b.Property<int>("IsHidden")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OwnerNationalCardNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CollateralId");

                    b.HasIndex("CollateralTypeId");

                    b.ToTable("Collateral");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.CollateralType", b =>
                {
                    b.Property<int>("CollateralTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollateralTypeId"));

                    b.Property<string>("CollateralTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CollateralTypeId");

                    b.ToTable("CollateralType");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.CreditOfficer", b =>
                {
                    b.Property<int>("CreditOfficerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditOfficerId"));

                    b.Property<string>("CreditOfficerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IsHidden")
                        .HasColumnType("int");

                    b.Property<string>("POB")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("CreditOfficerId");

                    b.ToTable("CreditOfficer");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IsHidden")
                        .HasColumnType("int");

                    b.Property<string>("POB")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Loan", b =>
                {
                    b.Property<int>("LoadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoadId"));

                    b.Property<int>("CollateralId")
                        .HasColumnType("int");

                    b.Property<int>("CreditOfficerId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("InterestRate")
                        .HasColumnType("int");

                    b.Property<int>("IsHidden")
                        .HasColumnType("int");

                    b.Property<int>("LoanAmount")
                        .HasColumnType("int");

                    b.Property<string>("LoanCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LoanDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Memo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PaymentFrequencyCode")
                        .HasColumnType("int");

                    b.HasKey("LoadId");

                    b.HasIndex("CollateralId");

                    b.HasIndex("CreditOfficerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.LoanDetail", b =>
                {
                    b.Property<int>("LoanDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanDetailId"));

                    b.Property<double>("BeginningBalance")
                        .HasColumnType("float");

                    b.Property<double>("EndingBalance")
                        .HasColumnType("float");

                    b.Property<double>("Interest")
                        .HasColumnType("float");

                    b.Property<int>("IsPaid")
                        .HasColumnType("int");

                    b.Property<int>("LoadId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Payment")
                        .HasColumnType("float");

                    b.Property<int>("PeriodNo")
                        .HasColumnType("int");

                    b.Property<double>("Principle")
                        .HasColumnType("float");

                    b.HasKey("LoanDetailId");

                    b.HasIndex("LoadId");

                    b.ToTable("LoadDetails");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Address", b =>
                {
                    b.HasOne("LoanManagementSystem.Models.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.AppUserPermission", b =>
                {
                    b.HasOne("LoanManagementSystem.Models.AppUser", "AppUser")
                        .WithMany("AppUserPermissions")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Collateral", b =>
                {
                    b.HasOne("LoanManagementSystem.Models.CollateralType", "CollateralType")
                        .WithMany("Collaterals")
                        .HasForeignKey("CollateralTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CollateralType");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Loan", b =>
                {
                    b.HasOne("LoanManagementSystem.Models.Collateral", "Collateral")
                        .WithMany("Loans")
                        .HasForeignKey("CollateralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagementSystem.Models.CreditOfficer", "CreditOfficer")
                        .WithMany("Loans")
                        .HasForeignKey("CreditOfficerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagementSystem.Models.Customer", "Customer")
                        .WithMany("Loans")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collateral");

                    b.Navigation("CreditOfficer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.LoanDetail", b =>
                {
                    b.HasOne("LoanManagementSystem.Models.Loan", "Loan")
                        .WithMany("LoanDetails")
                        .HasForeignKey("LoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.AppUser", b =>
                {
                    b.Navigation("AppUserPermissions");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Collateral", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.CollateralType", b =>
                {
                    b.Navigation("Collaterals");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.CreditOfficer", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Loans");
                });

            modelBuilder.Entity("LoanManagementSystem.Models.Loan", b =>
                {
                    b.Navigation("LoanDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
